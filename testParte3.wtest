import mensajeros.*
import destinos.*
import empresaMensajeria.*
import paquetes.*

describe "Pruebas de mensajeria" {
  // 1)
  test "Averiguar si al menos uno de sus mensajeros puede entregar el paquete" {
    assert.that(empresaDeMensajeria.unoDeEllosPuedenPasar())
  }

  // 2)
  test "Obtener todos los mensajeros que pueden llevar un paquete dado"{
    assert.that(empresaDeMensajeria.todosPuedenLLevarElPaquete(paqueteOriginal))
  }

  // 3)
  test "Saber si una mensajería tiene sobrepeso. Esto sucede si el promedio del peso de los mensajeros es superior a 500 Kg." {
    assert.that(empresaDeMensajeria.pesoTotal() > 500)
  }

  // 4)
  test "Hacer que la empresa de mensajería envíe un paquete si hay un mensajero dado."{
    empresaDeMensajeria.enviarPaqueteAUnMensajeroSiHay()
    assert.notThat(paquetesPendientes.isEmpty() or paquetesEnviados.isEmpty())
  }

  // 5)
  test "Conocer la facturación de la empresa, que es el total ganado por los paquetes enviados." {
    assert.that(empresaDeMensajeria.facturacion() > 0)
  }

  // 6)
  test "Dado un conjunto de paquetes, enviarlos a todos." {
    empresaDeMensajeria.enviarTodosLosPaquetes()
    assert.equals(0, empresaDeMensajeria.cantPaquetes())
  }

  // 7)
  // 8)
  // 9)
  /*test "Agregar un nuevo mensajero y un nuevo paquete y garantizar que todo siga funcionando." {
    mensajeros.add(neo)
    paquetes.add(paqueteOriginal)
    assert.that(mensajeros.contains(neo) and paquetes.contains(paqueteOriginal))
  }*/
}